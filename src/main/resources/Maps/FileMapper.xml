<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Dao.FileMapper" >
  <resultMap id="BaseResultMap" type="Model.File" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="UUID" property="uuid" jdbcType="CHAR" />
    <result column="Name" property="name" jdbcType="NVARCHAR" />
    <result column="Suffix" property="suffix" jdbcType="NVARCHAR" />
    <result column="UploadDate" property="uploaddate" jdbcType="TIMESTAMP" />
    <result column="ModifyDate" property="modifydate" jdbcType="TIMESTAMP" />
    <result column="PathNode" property="pathnode" jdbcType="INTEGER" />
    <result column="MD5" property="md5" jdbcType="NVARCHAR" />
    <result column="Point" property="point" jdbcType="INTEGER" />
    <result column="Size" property="size" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, UUID, Name, Suffix, UploadDate, ModifyDate, PathNode, MD5, Point, Size
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from [File]
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from [File]
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Model.File" >
    insert into [File] (UUID, Name,
      Suffix, UploadDate, ModifyDate, 
      PathNode, MD5, Point, 
      Size)
    values (#{uuid,jdbcType=CHAR}, #{name,jdbcType=NVARCHAR},
      #{suffix,jdbcType=NVARCHAR}, #{uploaddate,jdbcType=TIMESTAMP}, #{modifydate,jdbcType=TIMESTAMP}, 
      #{pathnode,jdbcType=INTEGER}, #{md5,jdbcType=NVARCHAR}, #{point,jdbcType=INTEGER}, 
      #{size,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="Model.File" >
    insert into [File]
    <trim prefix="(" suffix=")" suffixOverrides="," >

      <if test="uuid != null" >
        UUID,
      </if>
      <if test="name != null" >
        Name,
      </if>
      <if test="suffix != null" >
        Suffix,
      </if>
      <if test="uploaddate != null" >
        UploadDate,
      </if>
      <if test="modifydate != null" >
        ModifyDate,
      </if>
      <if test="pathnode != null" >
        PathNode,
      </if>
      <if test="md5 != null" >
        MD5,
      </if>
      <if test="point != null" >
        Point,
      </if>
      <if test="size != null" >
        Size,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >

      <if test="uuid != null" >
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=NVARCHAR},
      </if>
      <if test="suffix != null" >
        #{suffix,jdbcType=NVARCHAR},
      </if>
      <if test="uploaddate != null" >
        #{uploaddate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifydate != null" >
        #{modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="pathnode != null" >
        #{pathnode,jdbcType=INTEGER},
      </if>
      <if test="md5 != null" >
        #{md5,jdbcType=NVARCHAR},
      </if>
      <if test="point != null" >
        #{point,jdbcType=INTEGER},
      </if>
      <if test="size != null" >
        #{size,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Model.File" >
    update [File]
    <set >
      <if test="uuid != null" >
        UUID = #{uuid,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        Name = #{name,jdbcType=NVARCHAR},
      </if>
      <if test="suffix != null" >
        Suffix = #{suffix,jdbcType=NVARCHAR},
      </if>
      <if test="uploaddate != null" >
        UploadDate = #{uploaddate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifydate != null" >
        ModifyDate = #{modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="pathnode != null" >
        PathNode = #{pathnode,jdbcType=INTEGER},
      </if>
      <if test="md5 != null" >
        MD5 = #{md5,jdbcType=NVARCHAR},
      </if>
      <if test="point != null" >
        Point = #{point,jdbcType=INTEGER},
      </if>
      <if test="size != null" >
        Size = #{size,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Model.File" >
    update [File]
    set UUID = #{uuid,jdbcType=CHAR},
      Name = #{name,jdbcType=NVARCHAR},
      Suffix = #{suffix,jdbcType=NVARCHAR},
      UploadDate = #{uploaddate,jdbcType=TIMESTAMP},
      ModifyDate = #{modifydate,jdbcType=TIMESTAMP},
      PathNode = #{pathnode,jdbcType=INTEGER},
      MD5 = #{md5,jdbcType=NVARCHAR},
      Point = #{point,jdbcType=INTEGER},
      Size = #{size,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>