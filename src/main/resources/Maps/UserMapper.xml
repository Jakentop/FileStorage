<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Dao.UserMapper" >
  <resultMap id="BaseResultMap" type="Model.User" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="UserName" property="username" jdbcType="NVARCHAR" />
    <result column="Password" property="password" jdbcType="NVARCHAR" />
    <result column="ParentID" property="parentid" jdbcType="INTEGER" />
    <result column="LogicNode" property="logicnode" jdbcType="INTEGER" />
    <result column="E_Mail" property="eMail" jdbcType="NVARCHAR" />
    <result column="Valid" property="valid" jdbcType="INTEGER" />
  </resultMap>
<!--  自定义Sql语句-->


<!--  预定义Sql语句-->
  <sql id="Base_Column_List" >
    ID, UserName, Password, ParentID, LogicNode, E_Mail, Valid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from [User]
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from [User]
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Model.User" >
    insert into [User] (UserName, Password,
      ParentID, LogicNode, E_Mail, 
      Valid)
    values (#{username,jdbcType=NVARCHAR}, #{password,jdbcType=NVARCHAR},
      #{parentid,jdbcType=INTEGER}, #{logicnode,jdbcType=INTEGER}, #{eMail,jdbcType=NVARCHAR}, 
      #{valid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="Model.User" >
    insert into [User]
    <trim prefix="(" suffix=")" suffixOverrides="," >

      <if test="username != null" >
        UserName,
      </if>
      <if test="password != null" >
        Password,
      </if>
      <if test="parentid != null" >
        ParentID,
      </if>
      <if test="logicnode != null" >
        LogicNode,
      </if>
      <if test="eMail != null" >
        E_Mail,
      </if>
      <if test="valid != null" >
        Valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >

      <if test="username != null" >
        #{username,jdbcType=NVARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=NVARCHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="logicnode != null" >
        #{logicnode,jdbcType=INTEGER},
      </if>
      <if test="eMail != null" >
        #{eMail,jdbcType=NVARCHAR},
      </if>
      <if test="valid != null" >
        #{valid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Model.User" >
    update [User]
    <set >
      <if test="username != null" >
        UserName = #{username,jdbcType=NVARCHAR},
      </if>
      <if test="password != null" >
        Password = #{password,jdbcType=NVARCHAR},
      </if>
      <if test="parentid != null" >
        ParentID = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="logicnode != null" >
        LogicNode = #{logicnode,jdbcType=INTEGER},
      </if>
      <if test="eMail != null" >
        E_Mail = #{eMail,jdbcType=NVARCHAR},
      </if>
      <if test="valid != null" >
        Valid = #{valid,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Model.User" >
    update [User]
    set UserName = #{username,jdbcType=NVARCHAR},
      Password = #{password,jdbcType=NVARCHAR},
      ParentID = #{parentid,jdbcType=INTEGER},
      LogicNode = #{logicnode,jdbcType=INTEGER},
      E_Mail = #{eMail,jdbcType=NVARCHAR},
      Valid = #{valid,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>