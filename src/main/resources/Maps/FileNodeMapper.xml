<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Dao.FileNodeMapper">
  <resultMap id="BaseResultMap" type="Model.FileNode">
    <id column="PathNode" jdbcType="INTEGER" property="pathnode" />
    <result column="FileID" jdbcType="INTEGER" property="fileid" />
    <result column="NodeID" jdbcType="INTEGER" property="nodeid" />
  </resultMap>
  <sql id="Base_Column_List">
    PathNode, FileID, NodeID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from FileNode
    where PathNode = #{pathnode,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from FileNode
    where PathNode = #{pathnode,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Model.FileNode">
    insert into FileNode (PathNode, FileID, NodeID
      )
    values (#{pathnode,jdbcType=INTEGER}, #{fileid,jdbcType=INTEGER}, #{nodeid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="Model.FileNode">
    insert into FileNode
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pathnode != null">
        PathNode,
      </if>
      <if test="fileid != null">
        FileID,
      </if>
      <if test="nodeid != null">
        NodeID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pathnode != null">
        #{pathnode,jdbcType=INTEGER},
      </if>
      <if test="fileid != null">
        #{fileid,jdbcType=INTEGER},
      </if>
      <if test="nodeid != null">
        #{nodeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Model.FileNode">
    update FileNode
    <set>
      <if test="fileid != null">
        FileID = #{fileid,jdbcType=INTEGER},
      </if>
      <if test="nodeid != null">
        NodeID = #{nodeid,jdbcType=INTEGER},
      </if>
    </set>
    where PathNode = #{pathnode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Model.FileNode">
    update FileNode
    set FileID = #{fileid,jdbcType=INTEGER},
      NodeID = #{nodeid,jdbcType=INTEGER}
    where PathNode = #{pathnode,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="Model.FileNode">
    <id column="PathNode" jdbcType="INTEGER" property="pathnode" />
    <result column="FileID" jdbcType="INTEGER" property="fileid" />
    <result column="NodeID" jdbcType="INTEGER" property="nodeid" />
  </resultMap>
  <sql id="Base_Column_List">
    PathNode, FileID, NodeID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from FileNode
    where PathNode = #{pathnode,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from FileNode
    where PathNode = #{pathnode,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Model.FileNode">
    insert into FileNode (PathNode, FileID, NodeID
      )
    values (#{pathnode,jdbcType=INTEGER}, #{fileid,jdbcType=INTEGER}, #{nodeid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="Model.FileNode">
    insert into FileNode
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pathnode != null">
        PathNode,
      </if>
      <if test="fileid != null">
        FileID,
      </if>
      <if test="nodeid != null">
        NodeID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pathnode != null">
        #{pathnode,jdbcType=INTEGER},
      </if>
      <if test="fileid != null">
        #{fileid,jdbcType=INTEGER},
      </if>
      <if test="nodeid != null">
        #{nodeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Model.FileNode">
    update FileNode
    <set>
      <if test="fileid != null">
        FileID = #{fileid,jdbcType=INTEGER},
      </if>
      <if test="nodeid != null">
        NodeID = #{nodeid,jdbcType=INTEGER},
      </if>
    </set>
    where PathNode = #{pathnode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Model.FileNode">
    update FileNode
    set FileID = #{fileid,jdbcType=INTEGER},
      NodeID = #{nodeid,jdbcType=INTEGER}
    where PathNode = #{pathnode,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="Model.FileNode">
    <id column="PathNode" jdbcType="INTEGER" property="pathnode" />
    <result column="FileID" jdbcType="INTEGER" property="fileid" />
    <result column="NodeID" jdbcType="INTEGER" property="nodeid" />
  </resultMap>
  <sql id="Base_Column_List">
    PathNode, FileID, NodeID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from FileNode
    where PathNode = #{pathnode,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from FileNode
    where PathNode = #{pathnode,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Model.FileNode">
    insert into FileNode (PathNode, FileID, NodeID
      )
    values (#{pathnode,jdbcType=INTEGER}, #{fileid,jdbcType=INTEGER}, #{nodeid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="Model.FileNode">
    insert into FileNode
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pathnode != null">
        PathNode,
      </if>
      <if test="fileid != null">
        FileID,
      </if>
      <if test="nodeid != null">
        NodeID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pathnode != null">
        #{pathnode,jdbcType=INTEGER},
      </if>
      <if test="fileid != null">
        #{fileid,jdbcType=INTEGER},
      </if>
      <if test="nodeid != null">
        #{nodeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Model.FileNode">
    update FileNode
    <set>
      <if test="fileid != null">
        FileID = #{fileid,jdbcType=INTEGER},
      </if>
      <if test="nodeid != null">
        NodeID = #{nodeid,jdbcType=INTEGER},
      </if>
    </set>
    where PathNode = #{pathnode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Model.FileNode">
    update FileNode
    set FileID = #{fileid,jdbcType=INTEGER},
      NodeID = #{nodeid,jdbcType=INTEGER}
    where PathNode = #{pathnode,jdbcType=INTEGER}
  </update>
</mapper>