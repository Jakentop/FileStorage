<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Dao.NodeMapper">
  <resultMap id="BaseResultMap" type="Model.Node">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="Name" jdbcType="NVARCHAR" property="name" />
    <result column="ParentNode" jdbcType="NVARCHAR" property="parentnode" />
    <result column="UserID" jdbcType="INTEGER" property="userid" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, Name, ParentNode, UserID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Node
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Node
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Model.Node">
    insert into Node (ID, Name, ParentNode, 
      UserID)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=NVARCHAR}, #{parentnode,jdbcType=NVARCHAR}, 
      #{userid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="Model.Node">
    insert into Node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="parentnode != null">
        ParentNode,
      </if>
      <if test="userid != null">
        UserID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=NVARCHAR},
      </if>
      <if test="parentnode != null">
        #{parentnode,jdbcType=NVARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Model.Node">
    update Node
    <set>
      <if test="name != null">
        Name = #{name,jdbcType=NVARCHAR},
      </if>
      <if test="parentnode != null">
        ParentNode = #{parentnode,jdbcType=NVARCHAR},
      </if>
      <if test="userid != null">
        UserID = #{userid,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Model.Node">
    update Node
    set Name = #{name,jdbcType=NVARCHAR},
      ParentNode = #{parentnode,jdbcType=NVARCHAR},
      UserID = #{userid,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="Model.Node">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="Name" jdbcType="NVARCHAR" property="name" />
    <result column="ParentNode" jdbcType="NVARCHAR" property="parentnode" />
    <result column="UserID" jdbcType="INTEGER" property="userid" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, Name, ParentNode, UserID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Node
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Node
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Model.Node">
    insert into Node (ID, Name, ParentNode, 
      UserID)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=NVARCHAR}, #{parentnode,jdbcType=NVARCHAR}, 
      #{userid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="Model.Node">
    insert into Node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="parentnode != null">
        ParentNode,
      </if>
      <if test="userid != null">
        UserID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=NVARCHAR},
      </if>
      <if test="parentnode != null">
        #{parentnode,jdbcType=NVARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Model.Node">
    update Node
    <set>
      <if test="name != null">
        Name = #{name,jdbcType=NVARCHAR},
      </if>
      <if test="parentnode != null">
        ParentNode = #{parentnode,jdbcType=NVARCHAR},
      </if>
      <if test="userid != null">
        UserID = #{userid,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Model.Node">
    update Node
    set Name = #{name,jdbcType=NVARCHAR},
      ParentNode = #{parentnode,jdbcType=NVARCHAR},
      UserID = #{userid,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="Model.Node">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="Name" jdbcType="NVARCHAR" property="name" />
    <result column="ParentNode" jdbcType="NVARCHAR" property="parentnode" />
    <result column="UserID" jdbcType="INTEGER" property="userid" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, Name, ParentNode, UserID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Node
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Node
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Model.Node">
    insert into Node (ID, Name, ParentNode, 
      UserID)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=NVARCHAR}, #{parentnode,jdbcType=NVARCHAR}, 
      #{userid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="Model.Node">
    insert into Node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="parentnode != null">
        ParentNode,
      </if>
      <if test="userid != null">
        UserID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=NVARCHAR},
      </if>
      <if test="parentnode != null">
        #{parentnode,jdbcType=NVARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Model.Node">
    update Node
    <set>
      <if test="name != null">
        Name = #{name,jdbcType=NVARCHAR},
      </if>
      <if test="parentnode != null">
        ParentNode = #{parentnode,jdbcType=NVARCHAR},
      </if>
      <if test="userid != null">
        UserID = #{userid,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Model.Node">
    update Node
    set Name = #{name,jdbcType=NVARCHAR},
      ParentNode = #{parentnode,jdbcType=NVARCHAR},
      UserID = #{userid,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>